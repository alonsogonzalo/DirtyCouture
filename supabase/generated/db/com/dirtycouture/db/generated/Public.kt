/*
 * This file is generated by jOOQ.
 */
package com.dirtycouture.db.generated


import com.dirtycouture.db.generated.tables.CartItems
import com.dirtycouture.db.generated.tables.OrderItems
import com.dirtycouture.db.generated.tables.Orders
import com.dirtycouture.db.generated.tables.Payments
import com.dirtycouture.db.generated.tables.Points
import com.dirtycouture.db.generated.tables.ProductVariants
import com.dirtycouture.db.generated.tables.Products
import com.dirtycouture.db.generated.tables.ShippingAddresses
import com.dirtycouture.db.generated.tables.Users
import com.dirtycouture.db.generated.tables.WishlistItems

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class Public : SchemaImpl("public", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {

        /**
         * The reference instance of <code>public</code>
         */
        val PUBLIC: Public = Public()
    }

    /**
     * The table <code>public.cart_items</code>.
     */
    val CART_ITEMS: CartItems get() = CartItems.CART_ITEMS

    /**
     * The table <code>public.order_items</code>.
     */
    val ORDER_ITEMS: OrderItems get() = OrderItems.ORDER_ITEMS

    /**
     * The table <code>public.orders</code>.
     */
    val ORDERS: Orders get() = Orders.ORDERS

    /**
     * The table <code>public.payments</code>.
     */
    val PAYMENTS: Payments get() = Payments.PAYMENTS

    /**
     * The table <code>public.points</code>.
     */
    val POINTS: Points get() = Points.POINTS

    /**
     * The table <code>public.product_variants</code>.
     */
    val PRODUCT_VARIANTS: ProductVariants get() = ProductVariants.PRODUCT_VARIANTS

    /**
     * The table <code>public.products</code>.
     */
    val PRODUCTS: Products get() = Products.PRODUCTS

    /**
     * The table <code>public.shipping_addresses</code>.
     */
    val SHIPPING_ADDRESSES: ShippingAddresses get() = ShippingAddresses.SHIPPING_ADDRESSES

    /**
     * The table <code>public.users</code>.
     */
    val USERS: Users get() = Users.USERS

    /**
     * The table <code>public.wishlist_items</code>.
     */
    val WISHLIST_ITEMS: WishlistItems get() = WishlistItems.WISHLIST_ITEMS

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        CartItems.CART_ITEMS,
        OrderItems.ORDER_ITEMS,
        Orders.ORDERS,
        Payments.PAYMENTS,
        Points.POINTS,
        ProductVariants.PRODUCT_VARIANTS,
        Products.PRODUCTS,
        ShippingAddresses.SHIPPING_ADDRESSES,
        Users.USERS,
        WishlistItems.WISHLIST_ITEMS
    )
}
