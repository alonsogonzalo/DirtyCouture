/*
 * This file is generated by jOOQ.
 */
package com.dirtycouture.db.generated.keys


import com.dirtycouture.db.generated.tables.CartItems
import com.dirtycouture.db.generated.tables.OrderItems
import com.dirtycouture.db.generated.tables.Orders
import com.dirtycouture.db.generated.tables.Payments
import com.dirtycouture.db.generated.tables.Points
import com.dirtycouture.db.generated.tables.ProductVariants
import com.dirtycouture.db.generated.tables.Products
import com.dirtycouture.db.generated.tables.ShippingAddresses
import com.dirtycouture.db.generated.tables.Users
import com.dirtycouture.db.generated.tables.WishlistItems
import com.dirtycouture.db.generated.tables.records.CartItemsRecord
import com.dirtycouture.db.generated.tables.records.OrderItemsRecord
import com.dirtycouture.db.generated.tables.records.OrdersRecord
import com.dirtycouture.db.generated.tables.records.PaymentsRecord
import com.dirtycouture.db.generated.tables.records.PointsRecord
import com.dirtycouture.db.generated.tables.records.ProductVariantsRecord
import com.dirtycouture.db.generated.tables.records.ProductsRecord
import com.dirtycouture.db.generated.tables.records.ShippingAddressesRecord
import com.dirtycouture.db.generated.tables.records.UsersRecord
import com.dirtycouture.db.generated.tables.records.WishlistItemsRecord

import org.jooq.ForeignKey
import org.jooq.UniqueKey
import org.jooq.impl.DSL
import org.jooq.impl.Internal



// -------------------------------------------------------------------------
// UNIQUE and PRIMARY KEY definitions
// -------------------------------------------------------------------------

val CART_ITEMS_PKEY: UniqueKey<CartItemsRecord> = Internal.createUniqueKey(CartItems.CART_ITEMS, DSL.name("cart_items_pkey"), arrayOf(CartItems.CART_ITEMS.ID), true)
val ORDER_ITEMS_PKEY: UniqueKey<OrderItemsRecord> = Internal.createUniqueKey(OrderItems.ORDER_ITEMS, DSL.name("order_items_pkey"), arrayOf(OrderItems.ORDER_ITEMS.ID), true)
val ORDERS_PKEY: UniqueKey<OrdersRecord> = Internal.createUniqueKey(Orders.ORDERS, DSL.name("orders_pkey"), arrayOf(Orders.ORDERS.ID), true)
val PAYMENTS_PKEY: UniqueKey<PaymentsRecord> = Internal.createUniqueKey(Payments.PAYMENTS, DSL.name("payments_pkey"), arrayOf(Payments.PAYMENTS.ID), true)
val PAYMENTS_STRIPE_PAYMENT_ID_KEY: UniqueKey<PaymentsRecord> = Internal.createUniqueKey(Payments.PAYMENTS, DSL.name("payments_stripe_payment_id_key"), arrayOf(Payments.PAYMENTS.STRIPE_PAYMENT_ID), true)
val POINTS_PKEY: UniqueKey<PointsRecord> = Internal.createUniqueKey(Points.POINTS, DSL.name("points_pkey"), arrayOf(Points.POINTS.ID), true)
val PRODUCT_VARIANTS_PKEY: UniqueKey<ProductVariantsRecord> = Internal.createUniqueKey(ProductVariants.PRODUCT_VARIANTS, DSL.name("product_variants_pkey"), arrayOf(ProductVariants.PRODUCT_VARIANTS.ID), true)
val PRODUCT_VARIANTS_PRODUCT_ID_KEY: UniqueKey<ProductVariantsRecord> = Internal.createUniqueKey(ProductVariants.PRODUCT_VARIANTS, DSL.name("product_variants_product_id_key"), arrayOf(ProductVariants.PRODUCT_VARIANTS.PRODUCT_ID), true)
val PRODUCTS_CREATED_AT_KEY: UniqueKey<ProductsRecord> = Internal.createUniqueKey(Products.PRODUCTS, DSL.name("products_created_at_key"), arrayOf(Products.PRODUCTS.CREATED_AT), true)
val PRODUCTS_NAME_KEY: UniqueKey<ProductsRecord> = Internal.createUniqueKey(Products.PRODUCTS, DSL.name("products_name_key"), arrayOf(Products.PRODUCTS.NAME), true)
val PRODUCTS_PKEY: UniqueKey<ProductsRecord> = Internal.createUniqueKey(Products.PRODUCTS, DSL.name("products_pkey"), arrayOf(Products.PRODUCTS.ID), true)
val SHIPPING_ADDRESSES_ID_KEY: UniqueKey<ShippingAddressesRecord> = Internal.createUniqueKey(ShippingAddresses.SHIPPING_ADDRESSES, DSL.name("shipping_addresses_id_key"), arrayOf(ShippingAddresses.SHIPPING_ADDRESSES.ID), true)
val SHIPPING_ADDRESSES_PKEY: UniqueKey<ShippingAddressesRecord> = Internal.createUniqueKey(ShippingAddresses.SHIPPING_ADDRESSES, DSL.name("shipping_addresses_pkey"), arrayOf(ShippingAddresses.SHIPPING_ADDRESSES.ID), true)
val SHIPPING_ADDRESSES_USER_ID_KEY: UniqueKey<ShippingAddressesRecord> = Internal.createUniqueKey(ShippingAddresses.SHIPPING_ADDRESSES, DSL.name("shipping_addresses_user_id_key"), arrayOf(ShippingAddresses.SHIPPING_ADDRESSES.USER_ID), true)
val USERS_EMAIL_KEY: UniqueKey<UsersRecord> = Internal.createUniqueKey(Users.USERS, DSL.name("users_email_key"), arrayOf(Users.USERS.EMAIL), true)
val USERS_PKEY: UniqueKey<UsersRecord> = Internal.createUniqueKey(Users.USERS, DSL.name("users_pkey"), arrayOf(Users.USERS.ID), true)
val WISHLIST_ITEMS_PKEY: UniqueKey<WishlistItemsRecord> = Internal.createUniqueKey(WishlistItems.WISHLIST_ITEMS, DSL.name("wishlist_items_pkey"), arrayOf(WishlistItems.WISHLIST_ITEMS.ID), true)

// -------------------------------------------------------------------------
// FOREIGN KEY definitions
// -------------------------------------------------------------------------

val CART_ITEMS__CART_ITEMS_PRODUCT_VARIANT_ID_FKEY: ForeignKey<CartItemsRecord, ProductVariantsRecord> = Internal.createForeignKey(CartItems.CART_ITEMS, DSL.name("cart_items_product_variant_id_fkey"), arrayOf(CartItems.CART_ITEMS.PRODUCT_VARIANT_ID), com.dirtycouture.db.generated.keys.PRODUCT_VARIANTS_PKEY, arrayOf(ProductVariants.PRODUCT_VARIANTS.ID), true)
val CART_ITEMS__CART_ITEMS_USER_ID_FKEY: ForeignKey<CartItemsRecord, UsersRecord> = Internal.createForeignKey(CartItems.CART_ITEMS, DSL.name("cart_items_user_id_fkey"), arrayOf(CartItems.CART_ITEMS.USER_ID), com.dirtycouture.db.generated.keys.USERS_PKEY, arrayOf(Users.USERS.ID), true)
val ORDER_ITEMS__ORDER_ITEMS_ORDER_ID_FKEY: ForeignKey<OrderItemsRecord, OrdersRecord> = Internal.createForeignKey(OrderItems.ORDER_ITEMS, DSL.name("order_items_order_id_fkey"), arrayOf(OrderItems.ORDER_ITEMS.ORDER_ID), com.dirtycouture.db.generated.keys.ORDERS_PKEY, arrayOf(Orders.ORDERS.ID), true)
val ORDER_ITEMS__ORDER_ITEMS_PRODUCT_VARIANT_ID_FKEY: ForeignKey<OrderItemsRecord, ProductVariantsRecord> = Internal.createForeignKey(OrderItems.ORDER_ITEMS, DSL.name("order_items_product_variant_id_fkey"), arrayOf(OrderItems.ORDER_ITEMS.PRODUCT_VARIANT_ID), com.dirtycouture.db.generated.keys.PRODUCT_VARIANTS_PKEY, arrayOf(ProductVariants.PRODUCT_VARIANTS.ID), true)
val ORDERS__ORDERS_SHIPPING_ADDRESS_ID_FKEY: ForeignKey<OrdersRecord, ShippingAddressesRecord> = Internal.createForeignKey(Orders.ORDERS, DSL.name("orders_shipping_address_id_fkey"), arrayOf(Orders.ORDERS.SHIPPING_ADDRESS_ID), com.dirtycouture.db.generated.keys.SHIPPING_ADDRESSES_ID_KEY, arrayOf(ShippingAddresses.SHIPPING_ADDRESSES.ID), true)
val ORDERS__ORDERS_USER_ID_FKEY: ForeignKey<OrdersRecord, UsersRecord> = Internal.createForeignKey(Orders.ORDERS, DSL.name("orders_user_id_fkey"), arrayOf(Orders.ORDERS.USER_ID), com.dirtycouture.db.generated.keys.USERS_PKEY, arrayOf(Users.USERS.ID), true)
val PAYMENTS__PAYMENTS_ORDER_ID_FKEY: ForeignKey<PaymentsRecord, OrdersRecord> = Internal.createForeignKey(Payments.PAYMENTS, DSL.name("payments_order_id_fkey"), arrayOf(Payments.PAYMENTS.ORDER_ID), com.dirtycouture.db.generated.keys.ORDERS_PKEY, arrayOf(Orders.ORDERS.ID), true)
val POINTS__POINTS_USER_ID_FKEY: ForeignKey<PointsRecord, UsersRecord> = Internal.createForeignKey(Points.POINTS, DSL.name("points_user_id_fkey"), arrayOf(Points.POINTS.USER_ID), com.dirtycouture.db.generated.keys.USERS_PKEY, arrayOf(Users.USERS.ID), true)
val PRODUCT_VARIANTS__PRODUCT_VARIANTS_PRODUCT_ID_FKEY: ForeignKey<ProductVariantsRecord, ProductsRecord> = Internal.createForeignKey(ProductVariants.PRODUCT_VARIANTS, DSL.name("product_variants_product_id_fkey"), arrayOf(ProductVariants.PRODUCT_VARIANTS.PRODUCT_ID), com.dirtycouture.db.generated.keys.PRODUCTS_PKEY, arrayOf(Products.PRODUCTS.ID), true)
val PRODUCTS__PRODUCTS_ID_FKEY: ForeignKey<ProductsRecord, ProductVariantsRecord> = Internal.createForeignKey(Products.PRODUCTS, DSL.name("products_id_fkey"), arrayOf(Products.PRODUCTS.ID), com.dirtycouture.db.generated.keys.PRODUCT_VARIANTS_PRODUCT_ID_KEY, arrayOf(ProductVariants.PRODUCT_VARIANTS.PRODUCT_ID), true)
val SHIPPING_ADDRESSES__SHIPPING_ADDRESSES_USER_ID_FKEY: ForeignKey<ShippingAddressesRecord, UsersRecord> = Internal.createForeignKey(ShippingAddresses.SHIPPING_ADDRESSES, DSL.name("shipping_addresses_user_id_fkey"), arrayOf(ShippingAddresses.SHIPPING_ADDRESSES.USER_ID), com.dirtycouture.db.generated.keys.USERS_PKEY, arrayOf(Users.USERS.ID), true)
val USERS__USERS_ID_FKEY: ForeignKey<UsersRecord, ShippingAddressesRecord> = Internal.createForeignKey(Users.USERS, DSL.name("users_id_fkey"), arrayOf(Users.USERS.ID), com.dirtycouture.db.generated.keys.SHIPPING_ADDRESSES_USER_ID_KEY, arrayOf(ShippingAddresses.SHIPPING_ADDRESSES.USER_ID), true)
val WISHLIST_ITEMS__WISHLIST_ITEMS_PRODUCT_VARIANT_ID_FKEY: ForeignKey<WishlistItemsRecord, ProductVariantsRecord> = Internal.createForeignKey(WishlistItems.WISHLIST_ITEMS, DSL.name("wishlist_items_product_variant_id_fkey"), arrayOf(WishlistItems.WISHLIST_ITEMS.PRODUCT_VARIANT_ID), com.dirtycouture.db.generated.keys.PRODUCT_VARIANTS_PKEY, arrayOf(ProductVariants.PRODUCT_VARIANTS.ID), true)
val WISHLIST_ITEMS__WISHLIST_ITEMS_USER_ID_FKEY: ForeignKey<WishlistItemsRecord, UsersRecord> = Internal.createForeignKey(WishlistItems.WISHLIST_ITEMS, DSL.name("wishlist_items_user_id_fkey"), arrayOf(WishlistItems.WISHLIST_ITEMS.USER_ID), com.dirtycouture.db.generated.keys.USERS_PKEY, arrayOf(Users.USERS.ID), true)
