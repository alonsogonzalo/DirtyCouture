/*
 * This file is generated by jOOQ.
 */
package com.dirtycouture.db.generated.tables.pojos


import java.io.Serializable
import java.time.OffsetDateTime


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
data class ShippingAddresses(
    var id: Long? = null,
    var userId: Long? = null,
    var createdAt: OffsetDateTime? = null,
    var fullName: String? = null,
    var address: String? = null,
    var city: String? = null,
    var state: String? = null,
    var zipCode: String? = null,
    var country: String? = null,
    var phoneNumber: String? = null
): Serializable {


    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other === null)
            return false
        if (this::class != other::class)
            return false
        val o: ShippingAddresses = other as ShippingAddresses
        if (this.id === null) {
            if (o.id !== null)
                return false
        }
        else if (this.id != o.id)
            return false
        if (this.userId === null) {
            if (o.userId !== null)
                return false
        }
        else if (this.userId != o.userId)
            return false
        if (this.createdAt === null) {
            if (o.createdAt !== null)
                return false
        }
        else if (this.createdAt != o.createdAt)
            return false
        if (this.fullName === null) {
            if (o.fullName !== null)
                return false
        }
        else if (this.fullName != o.fullName)
            return false
        if (this.address === null) {
            if (o.address !== null)
                return false
        }
        else if (this.address != o.address)
            return false
        if (this.city === null) {
            if (o.city !== null)
                return false
        }
        else if (this.city != o.city)
            return false
        if (this.state === null) {
            if (o.state !== null)
                return false
        }
        else if (this.state != o.state)
            return false
        if (this.zipCode === null) {
            if (o.zipCode !== null)
                return false
        }
        else if (this.zipCode != o.zipCode)
            return false
        if (this.country === null) {
            if (o.country !== null)
                return false
        }
        else if (this.country != o.country)
            return false
        if (this.phoneNumber === null) {
            if (o.phoneNumber !== null)
                return false
        }
        else if (this.phoneNumber != o.phoneNumber)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.id === null) 0 else this.id.hashCode())
        result = prime * result + (if (this.userId === null) 0 else this.userId.hashCode())
        result = prime * result + (if (this.createdAt === null) 0 else this.createdAt.hashCode())
        result = prime * result + (if (this.fullName === null) 0 else this.fullName.hashCode())
        result = prime * result + (if (this.address === null) 0 else this.address.hashCode())
        result = prime * result + (if (this.city === null) 0 else this.city.hashCode())
        result = prime * result + (if (this.state === null) 0 else this.state.hashCode())
        result = prime * result + (if (this.zipCode === null) 0 else this.zipCode.hashCode())
        result = prime * result + (if (this.country === null) 0 else this.country.hashCode())
        result = prime * result + (if (this.phoneNumber === null) 0 else this.phoneNumber.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("ShippingAddresses (")

        sb.append(id)
        sb.append(", ").append(userId)
        sb.append(", ").append(createdAt)
        sb.append(", ").append(fullName)
        sb.append(", ").append(address)
        sb.append(", ").append(city)
        sb.append(", ").append(state)
        sb.append(", ").append(zipCode)
        sb.append(", ").append(country)
        sb.append(", ").append(phoneNumber)

        sb.append(")")
        return sb.toString()
    }
}
