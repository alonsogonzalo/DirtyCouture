/*
 * This file is generated by jOOQ.
 */
package com.dirtycouture.db.generated.tables.records


import com.dirtycouture.db.generated.enums.UserRole
import com.dirtycouture.db.generated.tables.Users

import java.time.OffsetDateTime

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record5
import org.jooq.Row5
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class UsersRecord() : UpdatableRecordImpl<UsersRecord>(Users.USERS), Record5<Long?, String?, String?, OffsetDateTime?, UserRole?> {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var email: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var passwordHash: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var createdAt: OffsetDateTime?
        set(value): Unit = set(3, value)
        get(): OffsetDateTime? = get(3) as OffsetDateTime?

    open var role: UserRole?
        set(value): Unit = set(4, value)
        get(): UserRole? = get(4) as UserRole?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row5<Long?, String?, String?, OffsetDateTime?, UserRole?> = super.fieldsRow() as Row5<Long?, String?, String?, OffsetDateTime?, UserRole?>
    override fun valuesRow(): Row5<Long?, String?, String?, OffsetDateTime?, UserRole?> = super.valuesRow() as Row5<Long?, String?, String?, OffsetDateTime?, UserRole?>
    override fun field1(): Field<Long?> = Users.USERS.ID
    override fun field2(): Field<String?> = Users.USERS.EMAIL
    override fun field3(): Field<String?> = Users.USERS.PASSWORD_HASH
    override fun field4(): Field<OffsetDateTime?> = Users.USERS.CREATED_AT
    override fun field5(): Field<UserRole?> = Users.USERS.ROLE
    override fun component1(): Long? = id
    override fun component2(): String? = email
    override fun component3(): String? = passwordHash
    override fun component4(): OffsetDateTime? = createdAt
    override fun component5(): UserRole? = role
    override fun value1(): Long? = id
    override fun value2(): String? = email
    override fun value3(): String? = passwordHash
    override fun value4(): OffsetDateTime? = createdAt
    override fun value5(): UserRole? = role

    override fun value1(value: Long?): UsersRecord {
        this.id = value
        return this
    }

    override fun value2(value: String?): UsersRecord {
        this.email = value
        return this
    }

    override fun value3(value: String?): UsersRecord {
        this.passwordHash = value
        return this
    }

    override fun value4(value: OffsetDateTime?): UsersRecord {
        this.createdAt = value
        return this
    }

    override fun value5(value: UserRole?): UsersRecord {
        this.role = value
        return this
    }

    override fun values(value1: Long?, value2: String?, value3: String?, value4: OffsetDateTime?, value5: UserRole?): UsersRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        return this
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    constructor(id: Long? = null, email: String? = null, passwordHash: String? = null, createdAt: OffsetDateTime? = null, role: UserRole? = null): this() {
        this.id = id
        this.email = email
        this.passwordHash = passwordHash
        this.createdAt = createdAt
        this.role = role
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    constructor(value: com.dirtycouture.db.generated.tables.pojos.Users?): this() {
        if (value != null) {
            this.id = value.id
            this.email = value.email
            this.passwordHash = value.passwordHash
            this.createdAt = value.createdAt
            this.role = value.role
        }
    }
}
